import { networkType } from "../../networkType.js";

let abi = "";
if (networkType === "testnet") {
  abi = [
    { type: "constructor", stateMutability: "nonpayable", inputs: [] },
    { type: "error", name: "ApprovalCallerNotOwnerNorApproved", inputs: [] },
    { type: "error", name: "ApprovalQueryForNonexistentToken", inputs: [] },
    { type: "error", name: "BalanceQueryForZeroAddress", inputs: [] },
    { type: "error", name: "MintERC2309QuantityExceedsLimit", inputs: [] },
    { type: "error", name: "MintToZeroAddress", inputs: [] },
    { type: "error", name: "MintZeroQuantity", inputs: [] },
    {
      type: "error",
      name: "OperatorNotAllowed",
      inputs: [{ type: "address", name: "operator", internalType: "address" }],
    },
    { type: "error", name: "OwnerQueryForNonexistentToken", inputs: [] },
    { type: "error", name: "OwnershipNotInitializedForExtraData", inputs: [] },
    { type: "error", name: "TransferCallerNotOwnerNorApproved", inputs: [] },
    { type: "error", name: "TransferFromIncorrectOwner", inputs: [] },
    {
      type: "error",
      name: "TransferToNonERC721ReceiverImplementer",
      inputs: [],
    },
    { type: "error", name: "TransferToZeroAddress", inputs: [] },
    { type: "error", name: "URIQueryForNonexistentToken", inputs: [] },
    {
      type: "event",
      name: "AddRound",
      inputs: [
        {
          type: "uint256",
          name: "roundId",
          internalType: "uint256",
          indexed: true,
        },
        {
          type: "uint256",
          name: "price",
          internalType: "uint256",
          indexed: false,
        },
        {
          type: "address",
          name: "seller",
          internalType: "address",
          indexed: false,
        },
        {
          type: "uint256",
          name: "perPurchaseLimit",
          internalType: "uint256",
          indexed: false,
        },
        {
          type: "uint256",
          name: "userPurchaseLimit",
          internalType: "uint256",
          indexed: false,
        },
        {
          type: "bool",
          name: "isPublic",
          internalType: "bool",
          indexed: false,
        },
        {
          type: "uint256",
          name: "startTime",
          internalType: "uint256",
          indexed: false,
        },
        {
          type: "uint256",
          name: "endTime",
          internalType: "uint256",
          indexed: false,
        },
        {
          type: "uint256",
          name: "maxSupply",
          internalType: "uint256",
          indexed: false,
        },
      ],
      anonymous: false,
    },
    {
      type: "event",
      name: "AdminTransfer",
      inputs: [
        {
          type: "address",
          name: "from",
          internalType: "address",
          indexed: false,
        },
        {
          type: "address",
          name: "to",
          internalType: "address",
          indexed: false,
        },
        {
          type: "uint256",
          name: "tokenId",
          internalType: "uint256",
          indexed: true,
        },
      ],
      anonymous: false,
    },
    {
      type: "event",
      name: "Approval",
      inputs: [
        {
          type: "address",
          name: "owner",
          internalType: "address",
          indexed: true,
        },
        {
          type: "address",
          name: "approved",
          internalType: "address",
          indexed: true,
        },
        {
          type: "uint256",
          name: "tokenId",
          internalType: "uint256",
          indexed: true,
        },
      ],
      anonymous: false,
    },
    {
      type: "event",
      name: "ApprovalForAll",
      inputs: [
        {
          type: "address",
          name: "owner",
          internalType: "address",
          indexed: true,
        },
        {
          type: "address",
          name: "operator",
          internalType: "address",
          indexed: true,
        },
        {
          type: "bool",
          name: "approved",
          internalType: "bool",
          indexed: false,
        },
      ],
      anonymous: false,
    },
    {
      type: "event",
      name: "BaseURI",
      inputs: [
        { type: "string", name: "uri", internalType: "string", indexed: false },
      ],
      anonymous: false,
    },
    {
      type: "event",
      name: "Burn",
      inputs: [
        {
          type: "uint256",
          name: "tokenId",
          internalType: "uint256",
          indexed: false,
        },
      ],
      anonymous: false,
    },
    {
      type: "event",
      name: "ClaimNFT",
      inputs: [
        {
          type: "uint256",
          name: "from",
          internalType: "uint256",
          indexed: false,
        },
        {
          type: "uint256",
          name: "to",
          internalType: "uint256",
          indexed: false,
        },
        {
          type: "address",
          name: "buyer",
          internalType: "address",
          indexed: false,
        },
        {
          type: "uint256[]",
          name: "rarityArray",
          internalType: "uint256[]",
          indexed: false,
        },
      ],
      anonymous: false,
    },
    {
      type: "event",
      name: "ConsecutiveTransfer",
      inputs: [
        {
          type: "uint256",
          name: "fromTokenId",
          internalType: "uint256",
          indexed: true,
        },
        {
          type: "uint256",
          name: "toTokenId",
          internalType: "uint256",
          indexed: false,
        },
        {
          type: "address",
          name: "from",
          internalType: "address",
          indexed: true,
        },
        { type: "address", name: "to", internalType: "address", indexed: true },
      ],
      anonymous: false,
    },
    {
      type: "event",
      name: "CraftNFT",
      inputs: [
        {
          type: "uint256",
          name: "tokenId",
          internalType: "uint256",
          indexed: false,
        },
        {
          type: "uint256[]",
          name: "tokenIds",
          internalType: "uint256[]",
          indexed: false,
        },
        {
          type: "address",
          name: "to",
          internalType: "address",
          indexed: false,
        },
      ],
      anonymous: false,
    },
    {
      type: "event",
      name: "EditRound",
      inputs: [
        {
          type: "uint256",
          name: "roundId",
          internalType: "uint256",
          indexed: true,
        },
        {
          type: "uint256",
          name: "price",
          internalType: "uint256",
          indexed: false,
        },
        {
          type: "address",
          name: "seller",
          internalType: "address",
          indexed: false,
        },
        {
          type: "uint256",
          name: "perPurchaseLimit",
          internalType: "uint256",
          indexed: false,
        },
        {
          type: "uint256",
          name: "userPurchaseLimit",
          internalType: "uint256",
          indexed: false,
        },
        {
          type: "bool",
          name: "isPublic",
          internalType: "bool",
          indexed: false,
        },
        {
          type: "uint256",
          name: "startTime",
          internalType: "uint256",
          indexed: false,
        },
        {
          type: "uint256",
          name: "endTime",
          internalType: "uint256",
          indexed: false,
        },
        {
          type: "uint256",
          name: "maxSupply",
          internalType: "uint256",
          indexed: false,
        },
      ],
      anonymous: false,
    },
    {
      type: "event",
      name: "Mint",
      inputs: [
        {
          type: "uint256",
          name: "start",
          internalType: "uint256",
          indexed: false,
        },
        {
          type: "uint256",
          name: "end",
          internalType: "uint256",
          indexed: false,
        },
        {
          type: "uint256",
          name: "total",
          internalType: "uint256",
          indexed: false,
        },
        {
          type: "address",
          name: "to",
          internalType: "address",
          indexed: false,
        },
        {
          type: "uint256[]",
          name: "rarityArray",
          internalType: "uint256[]",
          indexed: false,
        },
      ],
      anonymous: false,
    },
    {
      type: "event",
      name: "OwnershipTransferred",
      inputs: [
        {
          type: "address",
          name: "previousOwner",
          internalType: "address",
          indexed: true,
        },
        {
          type: "address",
          name: "newOwner",
          internalType: "address",
          indexed: true,
        },
      ],
      anonymous: false,
    },
    {
      type: "event",
      name: "PurchaseNFT",
      inputs: [
        {
          type: "uint256",
          name: "from",
          internalType: "uint256",
          indexed: false,
        },
        {
          type: "uint256",
          name: "to",
          internalType: "uint256",
          indexed: false,
        },
        {
          type: "uint256",
          name: "price",
          internalType: "uint256",
          indexed: false,
        },
        {
          type: "uint256",
          name: "paid",
          internalType: "uint256",
          indexed: false,
        },
        {
          type: "address",
          name: "seller",
          internalType: "address",
          indexed: false,
        },
        {
          type: "address",
          name: "buyer",
          internalType: "address",
          indexed: false,
        },
        {
          type: "uint256[]",
          name: "rarityArray",
          internalType: "uint256[]",
          indexed: false,
        },
      ],
      anonymous: false,
    },
    {
      type: "event",
      name: "ReserverNFT",
      inputs: [
        {
          type: "uint256",
          name: "price",
          internalType: "uint256",
          indexed: false,
        },
        {
          type: "uint256",
          name: "paid",
          internalType: "uint256",
          indexed: false,
        },
        {
          type: "address",
          name: "seller",
          internalType: "address",
          indexed: false,
        },
        {
          type: "address",
          name: "buyer",
          internalType: "address",
          indexed: false,
        },
        {
          type: "uint256",
          name: "limit",
          internalType: "uint256",
          indexed: false,
        },
      ],
      anonymous: false,
    },
    {
      type: "event",
      name: "Transfer",
      inputs: [
        {
          type: "address",
          name: "from",
          internalType: "address",
          indexed: true,
        },
        { type: "address", name: "to", internalType: "address", indexed: true },
        {
          type: "uint256",
          name: "tokenId",
          internalType: "uint256",
          indexed: true,
        },
      ],
      anonymous: false,
    },
    { type: "fallback", stateMutability: "payable" },
    {
      type: "function",
      stateMutability: "view",
      outputs: [
        {
          type: "address",
          name: "",
          internalType: "contract IOperatorFilterRegistry",
        },
      ],
      name: "OPERATOR_FILTER_REGISTRY",
      inputs: [],
    },
    {
      type: "function",
      stateMutability: "view",
      outputs: [{ type: "bool", name: "", internalType: "bool" }],
      name: "_allowAddress",
      inputs: [{ type: "address", name: "", internalType: "address" }],
    },
    {
      type: "function",
      stateMutability: "pure",
      outputs: [{ type: "bytes32", name: "", internalType: "bytes32" }],
      name: "_leaf",
      inputs: [
        { type: "address", name: "account", internalType: "address" },
        { type: "uint256", name: "quantity", internalType: "uint256" },
      ],
    },
    {
      type: "function",
      stateMutability: "nonpayable",
      outputs: [],
      name: "addAllowAddress",
      inputs: [{ type: "address", name: "_add", internalType: "address" }],
    },
    {
      type: "function",
      stateMutability: "nonpayable",
      outputs: [],
      name: "adminTransfer",
      inputs: [
        { type: "address", name: "to", internalType: "address" },
        { type: "uint256", name: "tokenId", internalType: "uint256" },
      ],
    },
    {
      type: "function",
      stateMutability: "payable",
      outputs: [],
      name: "approve",
      inputs: [
        { type: "address", name: "operator", internalType: "address" },
        { type: "uint256", name: "tokenId", internalType: "uint256" },
      ],
    },
    {
      type: "function",
      stateMutability: "view",
      outputs: [{ type: "uint256", name: "", internalType: "uint256" }],
      name: "balanceOf",
      inputs: [{ type: "address", name: "owner", internalType: "address" }],
    },
    {
      type: "function",
      stateMutability: "view",
      outputs: [{ type: "string", name: "", internalType: "string" }],
      name: "baseURI",
      inputs: [],
    },
    {
      type: "function",
      stateMutability: "view",
      outputs: [{ type: "uint256", name: "", internalType: "uint256" }],
      name: "bundleId",
      inputs: [],
    },
    {
      type: "function",
      stateMutability: "nonpayable",
      outputs: [],
      name: "burnAdmin",
      inputs: [{ type: "uint256", name: "tokenId", internalType: "uint256" }],
    },
    {
      type: "function",
      stateMutability: "payable",
      outputs: [],
      name: "buyAstroboyNFT",
      inputs: [
        { type: "bytes32[]", name: "proof", internalType: "bytes32[]" },
        { type: "uint256", name: "limit", internalType: "uint256" },
        { type: "bool", name: "isLimit", internalType: "bool" },
        { type: "uint256", name: "whiteListType", internalType: "uint256" },
      ],
    },
    {
      type: "function",
      stateMutability: "nonpayable",
      outputs: [],
      name: "claimAstroboyNFT",
      inputs: [],
    },
    {
      type: "function",
      stateMutability: "view",
      outputs: [{ type: "address", name: "", internalType: "address" }],
      name: "delegates",
      inputs: [{ type: "bytes4", name: "", internalType: "bytes4" }],
    },
    {
      type: "function",
      stateMutability: "view",
      outputs: [{ type: "bytes", name: "", internalType: "bytes" }],
      name: "funcSignatures",
      inputs: [{ type: "uint256", name: "", internalType: "uint256" }],
    },
    {
      type: "function",
      stateMutability: "view",
      outputs: [{ type: "address", name: "", internalType: "address" }],
      name: "getApproved",
      inputs: [{ type: "uint256", name: "tokenId", internalType: "uint256" }],
    },
    {
      type: "function",
      stateMutability: "view",
      outputs: [{ type: "address", name: "", internalType: "address" }],
      name: "getAuthor",
      inputs: [{ type: "uint256", name: "tokenId", internalType: "uint256" }],
    },
    {
      type: "function",
      stateMutability: "view",
      outputs: [{ type: "address", name: "", internalType: "address" }],
      name: "getCreator",
      inputs: [{ type: "uint256", name: "tokenId", internalType: "uint256" }],
    },
    {
      type: "function",
      stateMutability: "view",
      outputs: [{ type: "bool", name: "", internalType: "bool" }],
      name: "getIsTransferAllowed",
      inputs: [{ type: "address", name: "operator", internalType: "address" }],
    },
    {
      type: "function",
      stateMutability: "view",
      outputs: [{ type: "bool", name: "", internalType: "bool" }],
      name: "getLocked",
      inputs: [{ type: "uint256", name: "tokenId", internalType: "uint256" }],
    },
    {
      type: "function",
      stateMutability: "view",
      outputs: [{ type: "uint256", name: "", internalType: "uint256" }],
      name: "getMaxSupply",
      inputs: [],
    },
    {
      type: "function",
      stateMutability: "view",
      outputs: [{ type: "uint256", name: "", internalType: "uint256" }],
      name: "getPrice",
      inputs: [],
    },
    {
      type: "function",
      stateMutability: "view",
      outputs: [{ type: "bytes32", name: "", internalType: "bytes32" }],
      name: "getRootHash",
      inputs: [
        { type: "uint256", name: "whitelisType", internalType: "uint256" },
      ],
    },
    {
      type: "function",
      stateMutability: "view",
      outputs: [{ type: "uint256", name: "", internalType: "uint256" }],
      name: "getRoyaltyFee",
      inputs: [{ type: "uint256", name: "tokenId", internalType: "uint256" }],
    },
    {
      type: "function",
      stateMutability: "view",
      outputs: [
        { type: "uint256", name: "_startTime", internalType: "uint256" },
        { type: "uint256", name: "_endTime", internalType: "uint256" },
      ],
      name: "getSaleDetails",
      inputs: [
        { type: "uint256", name: "whitelistType", internalType: "uint256" },
      ],
    },
    {
      type: "function",
      stateMutability: "view",
      outputs: [{ type: "uint256", name: "", internalType: "uint256" }],
      name: "getUserBoughtCount",
      inputs: [
        { type: "address", name: "_add", internalType: "address" },
        { type: "uint256", name: "whitelistType", internalType: "uint256" },
      ],
    },
    {
      type: "function",
      stateMutability: "view",
      outputs: [{ type: "bool", name: "", internalType: "bool" }],
      name: "isApprovedForAll",
      inputs: [
        { type: "address", name: "owner", internalType: "address" },
        { type: "address", name: "operator", internalType: "address" },
      ],
    },
    {
      type: "function",
      stateMutability: "view",
      outputs: [{ type: "bool", name: "", internalType: "bool" }],
      name: "isTransferAllowed",
      inputs: [{ type: "address", name: "", internalType: "address" }],
    },
    {
      type: "function",
      stateMutability: "view",
      outputs: [{ type: "bool", name: "", internalType: "bool" }],
      name: "isWhitelisted",
      inputs: [
        { type: "address", name: "account", internalType: "address" },
        { type: "bytes32[]", name: "proof", internalType: "bytes32[]" },
        { type: "uint256", name: "quantity", internalType: "uint256" },
        { type: "uint256", name: "whiteListType", internalType: "uint256" },
      ],
    },
    {
      type: "function",
      stateMutability: "nonpayable",
      outputs: [],
      name: "lockNFTBulk",
      inputs: [
        { type: "uint256[]", name: "tokenIds", internalType: "uint256[]" },
        { type: "bool", name: "status", internalType: "bool" },
      ],
    },
    {
      type: "function",
      stateMutability: "nonpayable",
      outputs: [
        { type: "uint256", name: "", internalType: "uint256" },
        { type: "uint256", name: "", internalType: "uint256" },
      ],
      name: "mint",
      inputs: [
        { type: "address", name: "to_", internalType: "address" },
        { type: "uint256", name: "countNFTs_", internalType: "uint256" },
      ],
    },
    {
      type: "function",
      stateMutability: "view",
      outputs: [{ type: "string", name: "", internalType: "string" }],
      name: "name",
      inputs: [],
    },
    {
      type: "function",
      stateMutability: "view",
      outputs: [{ type: "bool", name: "", internalType: "bool" }],
      name: "nftLock",
      inputs: [{ type: "uint256", name: "", internalType: "uint256" }],
    },
    {
      type: "function",
      stateMutability: "view",
      outputs: [{ type: "address", name: "", internalType: "address" }],
      name: "owner",
      inputs: [],
    },
    {
      type: "function",
      stateMutability: "view",
      outputs: [{ type: "address", name: "", internalType: "address" }],
      name: "ownerOf",
      inputs: [{ type: "uint256", name: "tokenId", internalType: "uint256" }],
    },
    {
      type: "function",
      stateMutability: "view",
      outputs: [{ type: "uint256", name: "", internalType: "uint256" }],
      name: "perPurchaseNFTToMint",
      inputs: [],
    },
    {
      type: "function",
      stateMutability: "payable",
      outputs: [],
      name: "preOrderAstroboyNFT",
      inputs: [
        { type: "bytes32[]", name: "proof", internalType: "bytes32[]" },
        { type: "uint256", name: "limit", internalType: "uint256" },
      ],
    },
    {
      type: "function",
      stateMutability: "nonpayable",
      outputs: [],
      name: "removeAllowAddress",
      inputs: [{ type: "address", name: "_add", internalType: "address" }],
    },
    {
      type: "function",
      stateMutability: "nonpayable",
      outputs: [],
      name: "renounceOwnership",
      inputs: [],
    },
    {
      type: "function",
      stateMutability: "view",
      outputs: [{ type: "uint256", name: "", internalType: "uint256" }],
      name: "reservedNFT",
      inputs: [{ type: "uint256", name: "", internalType: "uint256" }],
    },
    {
      type: "function",
      stateMutability: "payable",
      outputs: [],
      name: "safeTransferFrom",
      inputs: [
        { type: "address", name: "from", internalType: "address" },
        { type: "address", name: "to", internalType: "address" },
        { type: "uint256", name: "tokenId", internalType: "uint256" },
      ],
    },
    {
      type: "function",
      stateMutability: "payable",
      outputs: [],
      name: "safeTransferFrom",
      inputs: [
        { type: "address", name: "from", internalType: "address" },
        { type: "address", name: "to", internalType: "address" },
        { type: "uint256", name: "tokenId", internalType: "uint256" },
        { type: "bytes", name: "data", internalType: "bytes" },
      ],
    },
    {
      type: "function",
      stateMutability: "nonpayable",
      outputs: [],
      name: "setApprovalForAll",
      inputs: [
        { type: "address", name: "operator", internalType: "address" },
        { type: "bool", name: "approved", internalType: "bool" },
      ],
    },
    {
      type: "function",
      stateMutability: "nonpayable",
      outputs: [],
      name: "setAuthor",
      inputs: [{ type: "address", name: "_add", internalType: "address" }],
    },
    {
      type: "function",
      stateMutability: "nonpayable",
      outputs: [],
      name: "setBaseURI",
      inputs: [{ type: "string", name: "baseURI_", internalType: "string" }],
    },
    {
      type: "function",
      stateMutability: "nonpayable",
      outputs: [],
      name: "setMaxSupply",
      inputs: [{ type: "uint256", name: "supply", internalType: "uint256" }],
    },
    {
      type: "function",
      stateMutability: "nonpayable",
      outputs: [],
      name: "setPerBundleNFTToMint",
      inputs: [{ type: "uint256", name: "nftTomint", internalType: "uint256" }],
    },
    {
      type: "function",
      stateMutability: "nonpayable",
      outputs: [],
      name: "setPrice",
      inputs: [{ type: "uint256", name: "price", internalType: "uint256" }],
    },
    {
      type: "function",
      stateMutability: "nonpayable",
      outputs: [],
      name: "setRoyalty",
      inputs: [{ type: "uint256", name: "_amount", internalType: "uint256" }],
    },
    {
      type: "function",
      stateMutability: "nonpayable",
      outputs: [],
      name: "setSaleDetails",
      inputs: [
        { type: "uint256", name: "_startTime", internalType: "uint256" },
        { type: "uint256", name: "_endTime", internalType: "uint256" },
        { type: "uint256", name: "whitelistType", internalType: "uint256" },
      ],
    },
    {
      type: "function",
      stateMutability: "nonpayable",
      outputs: [],
      name: "setStatus",
      inputs: [{ type: "uint256", name: "_status", internalType: "uint256" }],
    },
    {
      type: "function",
      stateMutability: "nonpayable",
      outputs: [],
      name: "setTransferAllowed",
      inputs: [
        { type: "address", name: "_add", internalType: "address" },
        { type: "bool", name: "status", internalType: "bool" },
      ],
    },
    {
      type: "function",
      stateMutability: "nonpayable",
      outputs: [],
      name: "setWhitelistRoot",
      inputs: [
        { type: "bytes32", name: "_root", internalType: "bytes32" },
        { type: "uint256", name: "whitelistType", internalType: "uint256" },
        { type: "bool", name: "isReserve", internalType: "bool" },
      ],
    },
    {
      type: "function",
      stateMutability: "nonpayable",
      outputs: [],
      name: "setlockStatusNFT",
      inputs: [
        { type: "uint256", name: "tokenId", internalType: "uint256" },
        { type: "bool", name: "status", internalType: "bool" },
      ],
    },
    {
      type: "function",
      stateMutability: "view",
      outputs: [{ type: "uint256", name: "", internalType: "uint256" }],
      name: "status",
      inputs: [],
    },
    {
      type: "function",
      stateMutability: "view",
      outputs: [{ type: "bool", name: "", internalType: "bool" }],
      name: "supportsInterface",
      inputs: [{ type: "bytes4", name: "interfaceId", internalType: "bytes4" }],
    },
    {
      type: "function",
      stateMutability: "view",
      outputs: [{ type: "string", name: "", internalType: "string" }],
      name: "symbol",
      inputs: [],
    },
    {
      type: "function",
      stateMutability: "view",
      outputs: [{ type: "string", name: "", internalType: "string" }],
      name: "tokenURI",
      inputs: [{ type: "uint256", name: "tokenId", internalType: "uint256" }],
    },
    {
      type: "function",
      stateMutability: "view",
      outputs: [{ type: "uint256", name: "", internalType: "uint256" }],
      name: "totalSupply",
      inputs: [],
    },
    {
      type: "function",
      stateMutability: "payable",
      outputs: [],
      name: "transferFrom",
      inputs: [
        { type: "address", name: "from", internalType: "address" },
        { type: "address", name: "to", internalType: "address" },
        { type: "uint256", name: "tokenId", internalType: "uint256" },
      ],
    },
    {
      type: "function",
      stateMutability: "nonpayable",
      outputs: [],
      name: "transferOwnership",
      inputs: [{ type: "address", name: "newOwner", internalType: "address" }],
    },
    { type: "receive", stateMutability: "payable" },
  ];
} else if (networkType === "mainnet") {
  abi = [
    { type: "constructor", stateMutability: "nonpayable", inputs: [] },
    { type: "error", name: "ApprovalCallerNotOwnerNorApproved", inputs: [] },
    { type: "error", name: "ApprovalQueryForNonexistentToken", inputs: [] },
    { type: "error", name: "BalanceQueryForZeroAddress", inputs: [] },
    { type: "error", name: "MintERC2309QuantityExceedsLimit", inputs: [] },
    { type: "error", name: "MintToZeroAddress", inputs: [] },
    { type: "error", name: "MintZeroQuantity", inputs: [] },
    {
      type: "error",
      name: "OperatorNotAllowed",
      inputs: [{ type: "address", name: "operator", internalType: "address" }],
    },
    { type: "error", name: "OwnerQueryForNonexistentToken", inputs: [] },
    { type: "error", name: "OwnershipNotInitializedForExtraData", inputs: [] },
    { type: "error", name: "TransferCallerNotOwnerNorApproved", inputs: [] },
    { type: "error", name: "TransferFromIncorrectOwner", inputs: [] },
    {
      type: "error",
      name: "TransferToNonERC721ReceiverImplementer",
      inputs: [],
    },
    { type: "error", name: "TransferToZeroAddress", inputs: [] },
    { type: "error", name: "URIQueryForNonexistentToken", inputs: [] },
    {
      type: "event",
      name: "AddRound",
      inputs: [
        {
          type: "uint256",
          name: "roundId",
          internalType: "uint256",
          indexed: true,
        },
        {
          type: "uint256",
          name: "price",
          internalType: "uint256",
          indexed: false,
        },
        {
          type: "address",
          name: "seller",
          internalType: "address",
          indexed: false,
        },
        {
          type: "uint256",
          name: "perPurchaseLimit",
          internalType: "uint256",
          indexed: false,
        },
        {
          type: "uint256",
          name: "userPurchaseLimit",
          internalType: "uint256",
          indexed: false,
        },
        {
          type: "bool",
          name: "isPublic",
          internalType: "bool",
          indexed: false,
        },
        {
          type: "uint256",
          name: "startTime",
          internalType: "uint256",
          indexed: false,
        },
        {
          type: "uint256",
          name: "endTime",
          internalType: "uint256",
          indexed: false,
        },
        {
          type: "uint256",
          name: "maxSupply",
          internalType: "uint256",
          indexed: false,
        },
      ],
      anonymous: false,
    },
    {
      type: "event",
      name: "AdminTransfer",
      inputs: [
        {
          type: "address",
          name: "from",
          internalType: "address",
          indexed: false,
        },
        {
          type: "address",
          name: "to",
          internalType: "address",
          indexed: false,
        },
        {
          type: "uint256",
          name: "tokenId",
          internalType: "uint256",
          indexed: true,
        },
      ],
      anonymous: false,
    },
    {
      type: "event",
      name: "Approval",
      inputs: [
        {
          type: "address",
          name: "owner",
          internalType: "address",
          indexed: true,
        },
        {
          type: "address",
          name: "approved",
          internalType: "address",
          indexed: true,
        },
        {
          type: "uint256",
          name: "tokenId",
          internalType: "uint256",
          indexed: true,
        },
      ],
      anonymous: false,
    },
    {
      type: "event",
      name: "ApprovalForAll",
      inputs: [
        {
          type: "address",
          name: "owner",
          internalType: "address",
          indexed: true,
        },
        {
          type: "address",
          name: "operator",
          internalType: "address",
          indexed: true,
        },
        {
          type: "bool",
          name: "approved",
          internalType: "bool",
          indexed: false,
        },
      ],
      anonymous: false,
    },
    {
      type: "event",
      name: "BaseURI",
      inputs: [
        { type: "string", name: "uri", internalType: "string", indexed: false },
      ],
      anonymous: false,
    },
    {
      type: "event",
      name: "Burn",
      inputs: [
        {
          type: "uint256",
          name: "tokenId",
          internalType: "uint256",
          indexed: false,
        },
      ],
      anonymous: false,
    },
    {
      type: "event",
      name: "ClaimNFT",
      inputs: [
        {
          type: "uint256",
          name: "from",
          internalType: "uint256",
          indexed: false,
        },
        {
          type: "uint256",
          name: "to",
          internalType: "uint256",
          indexed: false,
        },
        {
          type: "address",
          name: "buyer",
          internalType: "address",
          indexed: false,
        },
        {
          type: "uint256[]",
          name: "rarityArray",
          internalType: "uint256[]",
          indexed: false,
        },
      ],
      anonymous: false,
    },
    {
      type: "event",
      name: "ConsecutiveTransfer",
      inputs: [
        {
          type: "uint256",
          name: "fromTokenId",
          internalType: "uint256",
          indexed: true,
        },
        {
          type: "uint256",
          name: "toTokenId",
          internalType: "uint256",
          indexed: false,
        },
        {
          type: "address",
          name: "from",
          internalType: "address",
          indexed: true,
        },
        { type: "address", name: "to", internalType: "address", indexed: true },
      ],
      anonymous: false,
    },
    {
      type: "event",
      name: "CraftNFT",
      inputs: [
        {
          type: "uint256",
          name: "tokenId",
          internalType: "uint256",
          indexed: false,
        },
        {
          type: "uint256[]",
          name: "tokenIds",
          internalType: "uint256[]",
          indexed: false,
        },
        {
          type: "address",
          name: "to",
          internalType: "address",
          indexed: false,
        },
      ],
      anonymous: false,
    },
    {
      type: "event",
      name: "EditRound",
      inputs: [
        {
          type: "uint256",
          name: "roundId",
          internalType: "uint256",
          indexed: true,
        },
        {
          type: "uint256",
          name: "price",
          internalType: "uint256",
          indexed: false,
        },
        {
          type: "address",
          name: "seller",
          internalType: "address",
          indexed: false,
        },
        {
          type: "uint256",
          name: "perPurchaseLimit",
          internalType: "uint256",
          indexed: false,
        },
        {
          type: "uint256",
          name: "userPurchaseLimit",
          internalType: "uint256",
          indexed: false,
        },
        {
          type: "bool",
          name: "isPublic",
          internalType: "bool",
          indexed: false,
        },
        {
          type: "uint256",
          name: "startTime",
          internalType: "uint256",
          indexed: false,
        },
        {
          type: "uint256",
          name: "endTime",
          internalType: "uint256",
          indexed: false,
        },
        {
          type: "uint256",
          name: "maxSupply",
          internalType: "uint256",
          indexed: false,
        },
      ],
      anonymous: false,
    },
    {
      type: "event",
      name: "Mint",
      inputs: [
        {
          type: "uint256",
          name: "start",
          internalType: "uint256",
          indexed: false,
        },
        {
          type: "uint256",
          name: "end",
          internalType: "uint256",
          indexed: false,
        },
        {
          type: "uint256",
          name: "total",
          internalType: "uint256",
          indexed: false,
        },
        {
          type: "address",
          name: "to",
          internalType: "address",
          indexed: false,
        },
        {
          type: "uint256[]",
          name: "rarityArray",
          internalType: "uint256[]",
          indexed: false,
        },
      ],
      anonymous: false,
    },
    {
      type: "event",
      name: "OwnershipTransferred",
      inputs: [
        {
          type: "address",
          name: "previousOwner",
          internalType: "address",
          indexed: true,
        },
        {
          type: "address",
          name: "newOwner",
          internalType: "address",
          indexed: true,
        },
      ],
      anonymous: false,
    },
    {
      type: "event",
      name: "PurchaseNFT",
      inputs: [
        {
          type: "uint256",
          name: "from",
          internalType: "uint256",
          indexed: false,
        },
        {
          type: "uint256",
          name: "to",
          internalType: "uint256",
          indexed: false,
        },
        {
          type: "uint256",
          name: "price",
          internalType: "uint256",
          indexed: false,
        },
        {
          type: "uint256",
          name: "paid",
          internalType: "uint256",
          indexed: false,
        },
        {
          type: "address",
          name: "seller",
          internalType: "address",
          indexed: false,
        },
        {
          type: "address",
          name: "buyer",
          internalType: "address",
          indexed: false,
        },
        {
          type: "uint256[]",
          name: "rarityArray",
          internalType: "uint256[]",
          indexed: false,
        },
      ],
      anonymous: false,
    },
    {
      type: "event",
      name: "ReserverNFT",
      inputs: [
        {
          type: "uint256",
          name: "price",
          internalType: "uint256",
          indexed: false,
        },
        {
          type: "uint256",
          name: "paid",
          internalType: "uint256",
          indexed: false,
        },
        {
          type: "address",
          name: "seller",
          internalType: "address",
          indexed: false,
        },
        {
          type: "address",
          name: "buyer",
          internalType: "address",
          indexed: false,
        },
        {
          type: "uint256",
          name: "limit",
          internalType: "uint256",
          indexed: false,
        },
      ],
      anonymous: false,
    },
    {
      type: "event",
      name: "Transfer",
      inputs: [
        {
          type: "address",
          name: "from",
          internalType: "address",
          indexed: true,
        },
        { type: "address", name: "to", internalType: "address", indexed: true },
        {
          type: "uint256",
          name: "tokenId",
          internalType: "uint256",
          indexed: true,
        },
      ],
      anonymous: false,
    },
    { type: "fallback", stateMutability: "payable" },
    {
      type: "function",
      stateMutability: "view",
      outputs: [
        {
          type: "address",
          name: "",
          internalType: "contract IOperatorFilterRegistry",
        },
      ],
      name: "OPERATOR_FILTER_REGISTRY",
      inputs: [],
    },
    {
      type: "function",
      stateMutability: "view",
      outputs: [{ type: "bool", name: "", internalType: "bool" }],
      name: "_allowAddress",
      inputs: [{ type: "address", name: "", internalType: "address" }],
    },
    {
      type: "function",
      stateMutability: "pure",
      outputs: [{ type: "bytes32", name: "", internalType: "bytes32" }],
      name: "_leaf",
      inputs: [
        { type: "address", name: "account", internalType: "address" },
        { type: "uint256", name: "quantity", internalType: "uint256" },
      ],
    },
    {
      type: "function",
      stateMutability: "nonpayable",
      outputs: [],
      name: "addAllowAddress",
      inputs: [{ type: "address", name: "_add", internalType: "address" }],
    },
    {
      type: "function",
      stateMutability: "nonpayable",
      outputs: [],
      name: "adminTransfer",
      inputs: [
        { type: "address", name: "to", internalType: "address" },
        { type: "uint256", name: "tokenId", internalType: "uint256" },
      ],
    },
    {
      type: "function",
      stateMutability: "payable",
      outputs: [],
      name: "approve",
      inputs: [
        { type: "address", name: "operator", internalType: "address" },
        { type: "uint256", name: "tokenId", internalType: "uint256" },
      ],
    },
    {
      type: "function",
      stateMutability: "view",
      outputs: [{ type: "uint256", name: "", internalType: "uint256" }],
      name: "balanceOf",
      inputs: [{ type: "address", name: "owner", internalType: "address" }],
    },
    {
      type: "function",
      stateMutability: "view",
      outputs: [{ type: "string", name: "", internalType: "string" }],
      name: "baseURI",
      inputs: [],
    },
    {
      type: "function",
      stateMutability: "view",
      outputs: [{ type: "uint256", name: "", internalType: "uint256" }],
      name: "bundleId",
      inputs: [],
    },
    {
      type: "function",
      stateMutability: "nonpayable",
      outputs: [],
      name: "burnAdmin",
      inputs: [{ type: "uint256", name: "tokenId", internalType: "uint256" }],
    },
    {
      type: "function",
      stateMutability: "payable",
      outputs: [],
      name: "buyAstroboyNFT",
      inputs: [
        { type: "bytes32[]", name: "proof", internalType: "bytes32[]" },
        { type: "uint256", name: "limit", internalType: "uint256" },
        { type: "bool", name: "isLimit", internalType: "bool" },
        { type: "uint256", name: "whiteListType", internalType: "uint256" },
      ],
    },
    {
      type: "function",
      stateMutability: "nonpayable",
      outputs: [],
      name: "claimAstroboyNFT",
      inputs: [],
    },
    {
      type: "function",
      stateMutability: "view",
      outputs: [{ type: "address", name: "", internalType: "address" }],
      name: "delegates",
      inputs: [{ type: "bytes4", name: "", internalType: "bytes4" }],
    },
    {
      type: "function",
      stateMutability: "view",
      outputs: [{ type: "bytes", name: "", internalType: "bytes" }],
      name: "funcSignatures",
      inputs: [{ type: "uint256", name: "", internalType: "uint256" }],
    },
    {
      type: "function",
      stateMutability: "view",
      outputs: [{ type: "address", name: "", internalType: "address" }],
      name: "getApproved",
      inputs: [{ type: "uint256", name: "tokenId", internalType: "uint256" }],
    },
    {
      type: "function",
      stateMutability: "view",
      outputs: [{ type: "address", name: "", internalType: "address" }],
      name: "getAuthor",
      inputs: [{ type: "uint256", name: "tokenId", internalType: "uint256" }],
    },
    {
      type: "function",
      stateMutability: "view",
      outputs: [{ type: "address", name: "", internalType: "address" }],
      name: "getCreator",
      inputs: [{ type: "uint256", name: "tokenId", internalType: "uint256" }],
    },
    {
      type: "function",
      stateMutability: "view",
      outputs: [{ type: "bool", name: "", internalType: "bool" }],
      name: "getIsTransferAllowed",
      inputs: [{ type: "address", name: "operator", internalType: "address" }],
    },
    {
      type: "function",
      stateMutability: "view",
      outputs: [{ type: "bool", name: "", internalType: "bool" }],
      name: "getLocked",
      inputs: [{ type: "uint256", name: "tokenId", internalType: "uint256" }],
    },
    {
      type: "function",
      stateMutability: "view",
      outputs: [{ type: "uint256", name: "", internalType: "uint256" }],
      name: "getMaxSupply",
      inputs: [],
    },
    {
      type: "function",
      stateMutability: "view",
      outputs: [{ type: "uint256", name: "", internalType: "uint256" }],
      name: "getPrice",
      inputs: [],
    },
    {
      type: "function",
      stateMutability: "view",
      outputs: [{ type: "bytes32", name: "", internalType: "bytes32" }],
      name: "getRootHash",
      inputs: [
        { type: "uint256", name: "whitelisType", internalType: "uint256" },
      ],
    },
    {
      type: "function",
      stateMutability: "view",
      outputs: [{ type: "uint256", name: "", internalType: "uint256" }],
      name: "getRoyaltyFee",
      inputs: [{ type: "uint256", name: "tokenId", internalType: "uint256" }],
    },
    {
      type: "function",
      stateMutability: "view",
      outputs: [
        { type: "uint256", name: "_startTime", internalType: "uint256" },
        { type: "uint256", name: "_endTime", internalType: "uint256" },
      ],
      name: "getSaleDetails",
      inputs: [
        { type: "uint256", name: "whitelistType", internalType: "uint256" },
      ],
    },
    {
      type: "function",
      stateMutability: "view",
      outputs: [{ type: "uint256", name: "", internalType: "uint256" }],
      name: "getUserBoughtCount",
      inputs: [
        { type: "address", name: "_add", internalType: "address" },
        { type: "uint256", name: "whitelistType", internalType: "uint256" },
      ],
    },
    {
      type: "function",
      stateMutability: "view",
      outputs: [{ type: "bool", name: "", internalType: "bool" }],
      name: "isApprovedForAll",
      inputs: [
        { type: "address", name: "owner", internalType: "address" },
        { type: "address", name: "operator", internalType: "address" },
      ],
    },
    {
      type: "function",
      stateMutability: "view",
      outputs: [{ type: "bool", name: "", internalType: "bool" }],
      name: "isTransferAllowed",
      inputs: [{ type: "address", name: "", internalType: "address" }],
    },
    {
      type: "function",
      stateMutability: "view",
      outputs: [{ type: "bool", name: "", internalType: "bool" }],
      name: "isWhitelisted",
      inputs: [
        { type: "address", name: "account", internalType: "address" },
        { type: "bytes32[]", name: "proof", internalType: "bytes32[]" },
        { type: "uint256", name: "quantity", internalType: "uint256" },
        { type: "uint256", name: "whiteListType", internalType: "uint256" },
      ],
    },
    {
      type: "function",
      stateMutability: "nonpayable",
      outputs: [],
      name: "lockNFTBulk",
      inputs: [
        { type: "uint256[]", name: "tokenIds", internalType: "uint256[]" },
        { type: "bool", name: "status", internalType: "bool" },
      ],
    },
    {
      type: "function",
      stateMutability: "nonpayable",
      outputs: [
        { type: "uint256", name: "", internalType: "uint256" },
        { type: "uint256", name: "", internalType: "uint256" },
      ],
      name: "mint",
      inputs: [
        { type: "address", name: "to_", internalType: "address" },
        { type: "uint256", name: "countNFTs_", internalType: "uint256" },
      ],
    },
    {
      type: "function",
      stateMutability: "view",
      outputs: [{ type: "string", name: "", internalType: "string" }],
      name: "name",
      inputs: [],
    },
    {
      type: "function",
      stateMutability: "view",
      outputs: [{ type: "bool", name: "", internalType: "bool" }],
      name: "nftLock",
      inputs: [{ type: "uint256", name: "", internalType: "uint256" }],
    },
    {
      type: "function",
      stateMutability: "view",
      outputs: [{ type: "address", name: "", internalType: "address" }],
      name: "owner",
      inputs: [],
    },
    {
      type: "function",
      stateMutability: "view",
      outputs: [{ type: "address", name: "", internalType: "address" }],
      name: "ownerOf",
      inputs: [{ type: "uint256", name: "tokenId", internalType: "uint256" }],
    },
    {
      type: "function",
      stateMutability: "view",
      outputs: [{ type: "uint256", name: "", internalType: "uint256" }],
      name: "perPurchaseNFTToMint",
      inputs: [],
    },
    {
      type: "function",
      stateMutability: "payable",
      outputs: [],
      name: "preOrderAstroboyNFT",
      inputs: [
        { type: "bytes32[]", name: "proof", internalType: "bytes32[]" },
        { type: "uint256", name: "limit", internalType: "uint256" },
      ],
    },
    {
      type: "function",
      stateMutability: "nonpayable",
      outputs: [],
      name: "removeAllowAddress",
      inputs: [{ type: "address", name: "_add", internalType: "address" }],
    },
    {
      type: "function",
      stateMutability: "nonpayable",
      outputs: [],
      name: "renounceOwnership",
      inputs: [],
    },
    {
      type: "function",
      stateMutability: "view",
      outputs: [{ type: "uint256", name: "", internalType: "uint256" }],
      name: "reservedNFT",
      inputs: [{ type: "uint256", name: "", internalType: "uint256" }],
    },
    {
      type: "function",
      stateMutability: "payable",
      outputs: [],
      name: "safeTransferFrom",
      inputs: [
        { type: "address", name: "from", internalType: "address" },
        { type: "address", name: "to", internalType: "address" },
        { type: "uint256", name: "tokenId", internalType: "uint256" },
      ],
    },
    {
      type: "function",
      stateMutability: "payable",
      outputs: [],
      name: "safeTransferFrom",
      inputs: [
        { type: "address", name: "from", internalType: "address" },
        { type: "address", name: "to", internalType: "address" },
        { type: "uint256", name: "tokenId", internalType: "uint256" },
        { type: "bytes", name: "data", internalType: "bytes" },
      ],
    },
    {
      type: "function",
      stateMutability: "nonpayable",
      outputs: [],
      name: "setApprovalForAll",
      inputs: [
        { type: "address", name: "operator", internalType: "address" },
        { type: "bool", name: "approved", internalType: "bool" },
      ],
    },
    {
      type: "function",
      stateMutability: "nonpayable",
      outputs: [],
      name: "setAuthor",
      inputs: [{ type: "address", name: "_add", internalType: "address" }],
    },
    {
      type: "function",
      stateMutability: "nonpayable",
      outputs: [],
      name: "setBaseURI",
      inputs: [{ type: "string", name: "baseURI_", internalType: "string" }],
    },
    {
      type: "function",
      stateMutability: "nonpayable",
      outputs: [],
      name: "setMaxSupply",
      inputs: [{ type: "uint256", name: "supply", internalType: "uint256" }],
    },
    {
      type: "function",
      stateMutability: "nonpayable",
      outputs: [],
      name: "setPerBundleNFTToMint",
      inputs: [{ type: "uint256", name: "nftTomint", internalType: "uint256" }],
    },
    {
      type: "function",
      stateMutability: "nonpayable",
      outputs: [],
      name: "setPrice",
      inputs: [{ type: "uint256", name: "price", internalType: "uint256" }],
    },
    {
      type: "function",
      stateMutability: "nonpayable",
      outputs: [],
      name: "setRoyalty",
      inputs: [{ type: "uint256", name: "_amount", internalType: "uint256" }],
    },
    {
      type: "function",
      stateMutability: "nonpayable",
      outputs: [],
      name: "setSaleDetails",
      inputs: [
        { type: "uint256", name: "_startTime", internalType: "uint256" },
        { type: "uint256", name: "_endTime", internalType: "uint256" },
        { type: "uint256", name: "whitelistType", internalType: "uint256" },
      ],
    },
    {
      type: "function",
      stateMutability: "nonpayable",
      outputs: [],
      name: "setStatus",
      inputs: [{ type: "uint256", name: "_status", internalType: "uint256" }],
    },
    {
      type: "function",
      stateMutability: "nonpayable",
      outputs: [],
      name: "setTransferAllowed",
      inputs: [
        { type: "address", name: "_add", internalType: "address" },
        { type: "bool", name: "status", internalType: "bool" },
      ],
    },
    {
      type: "function",
      stateMutability: "nonpayable",
      outputs: [],
      name: "setWhitelistRoot",
      inputs: [
        { type: "bytes32", name: "_root", internalType: "bytes32" },
        { type: "uint256", name: "whitelistType", internalType: "uint256" },
        { type: "bool", name: "isReserve", internalType: "bool" },
      ],
    },
    {
      type: "function",
      stateMutability: "nonpayable",
      outputs: [],
      name: "setlockStatusNFT",
      inputs: [
        { type: "uint256", name: "tokenId", internalType: "uint256" },
        { type: "bool", name: "status", internalType: "bool" },
      ],
    },
    {
      type: "function",
      stateMutability: "view",
      outputs: [{ type: "uint256", name: "", internalType: "uint256" }],
      name: "status",
      inputs: [],
    },
    {
      type: "function",
      stateMutability: "view",
      outputs: [{ type: "bool", name: "", internalType: "bool" }],
      name: "supportsInterface",
      inputs: [{ type: "bytes4", name: "interfaceId", internalType: "bytes4" }],
    },
    {
      type: "function",
      stateMutability: "view",
      outputs: [{ type: "string", name: "", internalType: "string" }],
      name: "symbol",
      inputs: [],
    },
    {
      type: "function",
      stateMutability: "view",
      outputs: [{ type: "string", name: "", internalType: "string" }],
      name: "tokenURI",
      inputs: [{ type: "uint256", name: "tokenId", internalType: "uint256" }],
    },
    {
      type: "function",
      stateMutability: "view",
      outputs: [{ type: "uint256", name: "", internalType: "uint256" }],
      name: "totalSupply",
      inputs: [],
    },
    {
      type: "function",
      stateMutability: "payable",
      outputs: [],
      name: "transferFrom",
      inputs: [
        { type: "address", name: "from", internalType: "address" },
        { type: "address", name: "to", internalType: "address" },
        { type: "uint256", name: "tokenId", internalType: "uint256" },
      ],
    },
    {
      type: "function",
      stateMutability: "nonpayable",
      outputs: [],
      name: "transferOwnership",
      inputs: [{ type: "address", name: "newOwner", internalType: "address" }],
    },
    { type: "receive", stateMutability: "payable" },
  ];
}

export default abi;
